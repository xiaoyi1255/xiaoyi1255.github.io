import{_ as a,o as s,c as o,x as e,a as t}from"./chunks/framework.a4210b46.js";const g=JSON.parse('{"title":"算法","titleTemplate":"回溯算法","description":"","frontmatter":{"title":"算法","titleTemplate":"回溯算法"},"headers":[],"relativePath":"guide/js/算法/回溯.md","lastUpdated":1704281020000}'),n={name:"guide/js/算法/回溯.md"},r=e("h2",{id:"前言",tabindex:"-1"},[t("前言 "),e("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1),l=e("p",null,[e("strong",null,"回溯算法"),t("，也称"),e("strong",null,"试探法"),t("，它是一种选优搜索法，按选优条件向前搜索，以达到目标。但当搜索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯算法，而满足回溯算法的条件就是"),e("strong",null,"回溯条件"),t("。")],-1),c=[r,l];function d(i,_,p,m,u,h){return s(),o("div",null,c)}const x=a(n,[["render",d]]);export{g as __pageData,x as default};
